AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for SQS Queue and EventBridge Rule using the default event bus'

Parameters:
  QueueNameSuffix:
    Type: String
    Default: HealthEvents
    Description: Suffix for the SQS queue name

Resources:
  # Step 1: Create an SQS Queue in the Central Region
  CentralHealthEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${AWS::StackName}-${QueueNameSuffix}-${AWS::Region}"
      MessageRetentionPeriod: 1209600  # 14 days
      VisibilityTimeout: 30

  # Step 2: Create EventBridge Rule on the Default Event Bus
  ProcessEKSHealthEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-ProcessEKSHealthEvents-${AWS::Region}"
      EventPattern:
        source:
          - aws.health
        detail-type:
          - AWS Health Event
        detail:
          service:
            - EKS
          eventTypeCategory:
            - scheduledChange
          eventTypeCode:
            - AWS_EKS_PLANNED_LIFECYCLE_EVENT
      State: ENABLED
      Targets:
        - Arn: !GetAtt CentralHealthEventsQueue.Arn
          Id: TargetSQSQueue

  # Step 3: Add necessary permissions to the SQS queue
  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref CentralHealthEventsQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt CentralHealthEventsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !GetAtt ProcessEKSHealthEventsRule.Arn

Outputs:
  CentralHealthEventsQueueUrl:
    Description: URL of the Central Health Events SQS Queue
    Value: !Ref CentralHealthEventsQueue
  CentralHealthEventsQueueArn:
    Description: ARN of the Central Health Events SQS Queue
    Value: !GetAtt CentralHealthEventsQueue.Arn